
generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URI")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  displayName  String
  createdAt    DateTime  @default(now())
  lastSeenAt   DateTime? // updated on disconnect / logout
  isOnline     Boolean   @default(false)

  memberships  RoomMember[]
  messages     Message[]
  roomsCreated Room[]    @relation("UserRoomsCreated")
}

model Room {
  id           Int          @id @default(autoincrement())
  name         String
  isPrivate    Boolean       @default(false)
  inviteCode   String?       @unique
  createdById  Int
  createdAt    DateTime      @default(now())

  createdBy    User          @relation("UserRoomsCreated", fields: [createdById], references: [id])

  members      RoomMember[]
  messages     Message[]
}


model RoomMember {
  id        Int     @id @default(autoincrement())
  roomId    Int
  userId    Int
  joinedAt  DateTime @default(now())

  room      Room    @relation(fields: [roomId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([roomId, userId])
}

model Message {
  id         Int      @id @default(autoincrement())
  roomId     Int
  senderId   Int
  content    String
  createdAt  DateTime @default(now())
  delivered  Boolean  @default(false) // bonus
  read       Boolean  @default(false) // bonus

  room       Room     @relation(fields: [roomId], references: [id])
  sender     User     @relation(fields: [senderId], references: [id])

  @@index([roomId, createdAt])
}